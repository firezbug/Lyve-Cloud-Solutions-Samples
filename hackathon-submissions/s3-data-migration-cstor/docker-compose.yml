version: "3.7"

services:
  msgbroker:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"
    command: 
      - "redis-server"
      - "--save"
      - "20"
      - "1"
      - "--loglevel"
      - "warning"
      - "--requirepass"
      - "${REDIS_PASS:-}"

  web-frontend:
    build:
      context: main/
      target: frontend-build
    init: true
    environment:
      NODE_ENV: production
      VUE_APP_WEB_API: "${WEB_API}"
      VUE_APP_WEB_WS: "${WEB_WS}"
    volumes:
      - frontend-data:/var/www/webapp/frontend:rw

  setup:
    build:
      context: main/
      target: cstor-web-backend-migrate
    init: true
    environment:
      DEBUG: ${DEBUG:-False}
      SECRET_KEY: ${SECRET_KEY:-}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-}
      REDIS_CONN: ${REDIS_CONN:-}
      DB_CONN: ${DB_CONN:-/mnt/data/sqlite3.db}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS:-}
      DJANGO_SUPERUSER_USER: ${DJANGO_SUPERUSER_USER}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
      #
      REDIS_HOST: ${WORKER_REDIS_HOST:-}
      REDIS_PORT: ${WORKER_REDIS_PORT:-}
      REDIS_PASSWD: ${WORKER_REDIS_PASSWD:-}
    volumes:
      - cstor-data:/mnt/data:rw
      - static-data:/var/www/webapp/static:z
    
  web-backend:
    depends_on:
      - "msgbroker"
      - "setup"
    build:
      context: main/
      target: cstor-web-backend
    environment:
      DEBUG: ${DEBUG:-False}
      SECRET_KEY: ${SECRET_KEY:-}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-}
      REDIS_CONN: ${REDIS_CONN:-}
      DB_CONN: ${DB_CONN:-/mnt/data/sqlite3.db}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS:-}
      #
      REDIS_HOST: ${WORKER_REDIS_HOST:-}
      REDIS_PORT: ${WORKER_REDIS_PORT:-}
      REDIS_PASSWD: ${WORKER_REDIS_PASSWD:-}
    volumes:
      - cstor-data:/mnt/data:z

  web-server:
    depends_on:
      - "web-backend"
      - "web-frontend"
    build:
      context: web-server/
    ports:
      - "${WEB_API_PORT}:80"
    volumes:
      - static-data:/var/www/webapp/static:ro
      - frontend-data:/var/www/webapp/frontend:ro

  web-worker-1:
    depends_on:
      - "web-server"
    build:
      context: main/
      target: cstor-worker
    environment:
      AWS_ACCESS_KEY_ID: ${WORKER_AWS_USER:-}
      AWS_SECRET_ACCESS_KEY: ${WORKER_AWS_SECRET:-}
      WEBAPP_HOST: ${WORKER_WEBAPP_HOST:-}
      WEBAPP_TOKEN: ${WORKER_WEBAPP_TOKEN:-}
      CSTOR_DATA_DIR: ${WORKER_CSTOR_DATA_DIR:-}
      REDIS_HOST: ${WORKER_REDIS_HOST:-}
      REDIS_PORT: ${WORKER_REDIS_PORT:-}
      REDIS_PASSWD: ${WORKER_REDIS_PASSWD:-}
    volumes:
      - cstor-cache:/mnt/cstor_cache:z

volumes:
  cstor-data:
  static-data:
  frontend-data:
  cstor-cache:
